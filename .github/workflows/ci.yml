name: "CI"
on:
  push:
    branches:
      - main
  merge_group:
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
env:
  POETRY_VERSION: "1.5.1"
  DEFAULT_PY_VERSION: "3.11"

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PY_VERSION }}
      - name: Install Linter
        run: |
          RUFF_VERSION="$(python tools/dev/lint_version.py ruff poetry.lock)"
          BLACK_VERSION="$(python tools/dev/lint_version.py black poetry.lock)"
          pip install ruff=="$RUFF_VERSION" black=="$BLACK_VERSION"
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          # last OSS version
          terraform_version: "1.5.5"
      - name: Lint Check
        env:
          RUFF_OUTPUT_FORMAT: github
        run: |
          make lint
      - name: Check Workflows
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color

  Analyzer:
    runs-on: ubuntu-latest
    needs: Lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PY_VERSION }}
      - name: Run Bandit
        run: |
          python -m pip install bandit
          make analyzer-bandit
      - name: Run Semgrep
        run: |
          python -m pip install semgrep
          make analyzer-semgrep

  Tests:
    runs-on: ubuntu-latest
    needs: Lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          # last OSS version
          terraform_version: "1.5.5"

      - name: Install Custodian
        uses: ./.github/composites/install
        with:
          python-version: ${{ env.DEFAULT_PY_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Test
        shell: bash
        run: |
          make test-huaweicloud
